@use 'sass:color';
@use '~styles/mixin';
@use '~styles/themes' as t;

.root {
  position: relative;
  max-width: 300px;
  min-width: 150px;
  width: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  gap: 1px;
  @include mixin.border;
  @include t.background('backgroundSelected');

  &__title {
    padding: 5px;
    font-size: 20px;
    font-weight: bold;
    @include t.color('background');

    span {
      filter: drop-shadow(0px 0px 2px #0004);
    }
  }

  &__text {
    padding: 10px;
    @include t.background;

    pre {
      margin: 0;
      white-space: pre-wrap;
      word-break: keep-all;
    }
  }

  &__time {
    padding: 5px;
    text-align: right;
    @include t.background;
    @include t.color('hint');
    font-size: 0.8em;
  }

  &__close {
    position: absolute;
    top: 5px;
    right: 5px;
    @include mixin.square(20px);
    transform: rotate(45deg);
    @include mixin.fast-trans(transform);
    cursor: pointer;

    @function block($left, $color) {
      $right: 100% - $left;
      @return transparent $left, $color $left, $color $right, transparent $right;
    }

    @function cross($left, $color) {
      $block: block($left, $color);
      @return linear-gradient(to bottom, $block),
        linear-gradient(to right, $block);
    }

    @include t.themify {
      background-image: cross(35%, t.getValue('background'));
    }

    filter: drop-shadow(0px 0px 2px #0004);

    &:hover {
      transform: rotate(225deg);
    }
  }
}

@mixin set-color($value) {
  @include t.themify {
    $c1: t.getValue('background');
    $c2: t.getValue($value);
    $c3: color.adjust($c2, $alpha: -0.9);

    background-color: $c3;
    border-color: $c3;

    .root__title {
      background: linear-gradient(to right, $c1 10px, $c2 60px);
    }

    .root__text {
      color: $c2;
    }
  }
}

.root_error {
  @include set-color('error');
}

.root_warn {
  @include set-color('warn');
}

.root_info {
  @include set-color('info');
}
