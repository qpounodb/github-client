@use '~styles/size';
@use '~styles/mixin';
@use '~styles/themes' as t;

@mixin color($value) {
  @include t.themify {
    fill: t.getValue($value);
    color: t.getValue($value);
  }
}

@mixin frame($value) {
  @include t.themify {
    box-shadow: inset 0 0 0 4px t.getValue($value);
  }
}

@mixin secondary($value) {
  @include color($value);
  @include frame($value);
}

@mixin size($size) {
  height: $size;
  min-width: $size;
  max-width: calc($size * 5);
  padding: 0 calc($size / 2);
  font-size: calc($size / 2);
}

.root {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;

  display: flex;
  align-items: center;

  @include mixin.no-border;

  cursor: pointer;
  @include mixin.fast-trans(
    color,
    fill,
    border-color,
    background-color,
    box-shadow
  );

  &:disabled {
    cursor: default;
  }

  &_size {
    &-l {
      @include size(size.$height);
    }

    &-m {
      @include size(size.$height - 10px);
    }

    &-s {
      @include size(size.$height - 20px);
    }
  }

  &_primary {
    @include color('background');
    @include t.background('accent');

    &:hover {
      @include t.background('accentHover');
    }
    &:disabled {
      @include t.background('border');
    }
    &.root_loading {
      @include t.background('accentHover');
    }
  }

  &_secondary {
    @include secondary('accent');
    @include t.background;

    &:hover {
      @include secondary('accentHover');
    }
    &:disabled {
      @include secondary('border');
    }
    &.root_loading {
      @include secondary('accentHover');
      .root__loader {
        @include t.color('accentHover');
      }
    }
  }
}
